--simulation du filtre a une reponse impulsionnelle----------------------------------------------------
-------------------------------------------------------------------------------------------------------

library IEEE; 
use IEEE.std_logic_1164.all; 
use IEEE.numeric_std.all; -- Nouvelle bibliothèque standard pour les opérations arithmétiques

entity fir_par_16echantillon_tb is
end;

architecture bench of fir_par_16echantillon_tb is

  -- Déclaration du composant FIR
  component fir_par_16echantillon
    port(
      H50_I    : in  std_logic;
      Reset    : in  std_logic;
      data_in  : in  std_logic_vector(7 downto 0);
      CLK_CAN  : out std_logic;
      CLK_CNA  : out std_logic;
      data_out : out std_logic_vector(7 downto 0)
    );
  end component;

  -- Signaux de test
  signal H50_I    : std_logic;
  signal Reset    : std_logic;
  signal data_in  : std_logic_vector(7 downto 0);
  signal CLK_CAN  : std_logic;
  signal CLK_CNA  : std_logic;
  signal data_out : std_logic_vector(7 downto 0);

begin

  -- Instanciation du DUT (Device Under Test)
  uut: fir_par_16echantillon
    port map (
      H50_I    => H50_I,
      Reset    => Reset,
      data_in  => data_in,
      CLK_CAN  => CLK_CAN,
      CLK_CNA  => CLK_CNA,
      data_out => data_out
    );

  -- Génération de l'horloge
  Clocking : process
  begin
    H50_I  <= '1';
    wait for 10 ns;
    H50_I  <= '0';
    wait for 10 ns;
  end process;

  -- Stimulus
  Simulus : process
  begin
    -- Réinitialisation
    Reset <= '1';
    data_in <= std_logic_vector(to_unsigned(128, 8)); -- Conversion en std_logic_vector
    wait for 40 ns;

    -- Fin de la réinitialisation
    Reset <= '0';
    data_in <= std_logic_vector(to_unsigned(128, 8));
    wait for 40 ns;

    -- Données de test
    data_in <= std_logic_vector(to_unsigned(255, 8));
    wait for 20 ns;

    data_in <= std_logic_vector(to_unsigned(128, 8));
    wait;
  end process;

end bench;

